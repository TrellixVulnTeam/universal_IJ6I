{"ast":null,"code":"var _jsxFileName = \"/Users/duyujie/mvvm/universal/src/components/Button/button.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//定义Button大小\nexport let ButtonSize; //定义Button类型\n\n(function (ButtonSize) {\n  ButtonSize[\"Large\"] = \"lg\";\n  ButtonSize[\"Small\"] = \"sm\";\n})(ButtonSize || (ButtonSize = {}));\n\nexport let ButtonType; //定义接口Props\n\n(function (ButtonType) {\n  ButtonType[\"Primary\"] = \"primary\";\n  ButtonType[\"Default\"] = \"default\";\n  ButtonType[\"Danger\"] = \"danger\";\n  ButtonType[\"Link\"] = \"link\";\n})(ButtonType || (ButtonType = {}));\n\nconst Button = props => {\n  const {\n    className,\n    btnType,\n    disabled,\n    size,\n    children,\n    href,\n    ...restProps\n  } = props; //默认添加btn classname\n\n  const classes = classNames('btn', className, {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    'disabled': btnType === ButtonType.Link && disabled\n  });\n\n  if (btnType === ButtonType.Link && href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classes,\n      href: href,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes,\n      disabled: disabled,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this);\n  }\n}; //默认的props\n\n\n_c = Button;\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/duyujie/mvvm/universal/src/components/Button/button.tsx"],"names":["React","classNames","ButtonSize","ButtonType","Button","props","className","btnType","disabled","size","children","href","restProps","classes","Link","defaultProps","Default"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAGA;AACA,WAAYC,UAAZ,C,CAMA;;WANYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAOZ,WAAYC,UAAZ,C,CAOA;;WAPYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAqBZ,MAAMC,MAA6B,GAAIC,KAAD,IAAW;AAE7C,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA,QAArC;AAA+CC,IAAAA,IAA/C;AAAqD,OAAGC;AAAxD,MAAqEP,KAA3E,CAF6C,CAI7C;;AACA,QAAMQ,OAAO,GAAGZ,UAAU,CAAC,KAAD,EAAQK,SAAR,EAAmB;AACzC,KAAE,OAAMC,OAAQ,EAAhB,GAAoBA,OADqB;AAEzC,KAAE,OAAME,IAAK,EAAb,GAAiBA,IAFwB;AAGzC,gBAAaF,OAAO,KAAKJ,UAAU,CAACW,IAAxB,IAAiCN;AAHJ,GAAnB,CAA1B;;AAMA,MAAGD,OAAO,KAAKJ,UAAU,CAACW,IAAvB,IAA+BH,IAAlC,EAAuC;AACnC,wBAAQ;AAAG,MAAA,SAAS,EAAEE,OAAd;AAAuB,MAAA,IAAI,EAAEF,IAA7B;AAAA,gBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFD,MAEK;AACD,wBAAQ;AAAQ,MAAA,SAAS,EAAEG,OAAnB;AAA4B,MAAA,QAAQ,EAAEL,QAAtC;AAAA,gBAAiDE;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;AACJ,CAhBD,C,CAkBA;;;KAlBMN,M;AAmBNA,MAAM,CAACW,YAAP,GAAsB;AAClBP,EAAAA,QAAQ,EAAE,KADQ;AAElBD,EAAAA,OAAO,EAAEJ,UAAU,CAACa;AAFF,CAAtB;AAKA,eAAeZ,MAAf","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { type } from 'os';\n\n//定义Button大小\nexport enum ButtonSize {\n    Large = 'lg',\n    Small = 'sm'\n\n}\n\n//定义Button类型\nexport enum ButtonType {\n    Primary = 'primary',\n    Default = 'default',\n    Danger = 'danger',\n    Link = 'link'\n}\n\n//定义接口Props\ninterface BaseButtonProps {\n    className?: string,\n    disabled?: boolean,\n    size?: ButtonSize,\n    btnType?: ButtonType,\n    children?: React.ReactNode,\n    href?: string\n}\n\ntype NativeButtionProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<NativeButtionProps & AnchorButtonProps>\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    \n    const {className, btnType, disabled, size, children, href, ...restProps} = props\n    \n    //默认添加btn classname\n    const classes = classNames('btn', className, {\n        [`btn-${btnType}`]: btnType,\n        [`btn-${size}`]: size,\n        'disabled': (btnType === ButtonType.Link) && disabled,\n    });\n\n    if(btnType === ButtonType.Link && href){\n        return (<a className={classes} href={href}>{children}</a>)\n    }else{\n        return (<button className={classes} disabled={disabled}>{children}</button>)\n    }   \n}\n\n//默认的props\nButton.defaultProps = {\n    disabled: false,\n    btnType: ButtonType.Default\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}