{"ast":null,"code":"var _jsxFileName = \"/Users/duyujie/mvvm/universal/src/components/Button/button.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//定义Button大小\nexport let ButtonSize; //定义Button类型\n\n(function (ButtonSize) {\n  ButtonSize[\"Large\"] = \"lg\";\n  ButtonSize[\"Small\"] = \"sm\";\n})(ButtonSize || (ButtonSize = {}));\n\nexport let ButtonType; //定义接口Props\n\n(function (ButtonType) {\n  ButtonType[\"Primary\"] = \"primary\";\n  ButtonType[\"Default\"] = \"default\";\n  ButtonType[\"Danger\"] = \"danger\";\n  ButtonType[\"Link\"] = \"link\";\n})(ButtonType || (ButtonType = {}));\n\nconst Button = props => {\n  const {\n    btnType,\n    disabled,\n    size,\n    children,\n    href\n  } = props; //默认添加btn classname\n\n  const classes = classNames('btn', {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    'disabled': btnType === ButtonType.Link && disabled\n  });\n\n  if (btnType === ButtonType.Link && href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classes,\n      href: href,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes,\n      disabled: disabled,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this);\n  }\n}; //默认的props\n\n\n_c = Button;\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/duyujie/mvvm/universal/src/components/Button/button.tsx"],"names":["React","classNames","ButtonSize","ButtonType","Button","props","btnType","disabled","size","children","href","classes","Link","defaultProps","Default"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAGA;AACA,WAAYC,UAAZ,C,CAMA;;WANYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAOZ,WAAYC,UAAZ,C,CAOA;;WAPYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAqBZ,MAAMC,MAAiC,GAAIC,KAAD,IAAW;AACjD,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA;AAApC,MAA4CL,KAAlD,CADiD,CAGjD;;AACA,QAAMM,OAAO,GAAGV,UAAU,CAAC,KAAD,EAAQ;AAC9B,KAAE,OAAMK,OAAQ,EAAhB,GAAoBA,OADU;AAE9B,KAAE,OAAME,IAAK,EAAb,GAAiBA,IAFa;AAG9B,gBAAaF,OAAO,KAAKH,UAAU,CAACS,IAAxB,IAAiCL;AAHf,GAAR,CAA1B;;AAMA,MAAGD,OAAO,KAAKH,UAAU,CAACS,IAAvB,IAA+BF,IAAlC,EAAuC;AACnC,wBAAQ;AAAG,MAAA,SAAS,EAAEC,OAAd;AAAuB,MAAA,IAAI,EAAED,IAA7B;AAAA,gBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFD,MAEK;AACD,wBAAQ;AAAQ,MAAA,SAAS,EAAEE,OAAnB;AAA4B,MAAA,QAAQ,EAAEJ,QAAtC;AAAA,gBAAiDE;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;AACJ,CAfD,C,CAiBA;;;KAjBML,M;AAkBNA,MAAM,CAACS,YAAP,GAAsB;AAClBN,EAAAA,QAAQ,EAAE,KADQ;AAElBD,EAAAA,OAAO,EAAEH,UAAU,CAACW;AAFF,CAAtB;AAKA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { type } from 'os';\n\n//定义Button大小\nexport enum ButtonSize {\n    Large = 'lg',\n    Small = 'sm'\n\n}\n\n//定义Button类型\nexport enum ButtonType {\n    Primary = 'primary',\n    Default = 'default',\n    Danger = 'danger',\n    Link = 'link'\n}\n\n//定义接口Props\ninterface BaseButtonProps {\n    className?: string,\n    disabled?: boolean,\n    size?: ButtonSize,\n    btnType?: ButtonType,\n    children?: React.ReactNode,\n    href?: string\n}\n\ntype NativeButtionProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & AnchorButtonProps & React.AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = partial<NativeButtionProps & AnchorButtonProps>\n\nconst Button: React.FC<BaseButtonProps> = (props) => {\n    const {btnType, disabled, size, children, href} = props\n    \n    //默认添加btn classname\n    const classes = classNames('btn', {\n        [`btn-${btnType}`]: btnType,\n        [`btn-${size}`]: size,\n        'disabled': (btnType === ButtonType.Link) && disabled,\n    });\n\n    if(btnType === ButtonType.Link && href){\n        return (<a className={classes} href={href}>{children}</a>)\n    }else{\n        return (<button className={classes} disabled={disabled}>{children}</button>)\n    }   \n}\n\n//默认的props\nButton.defaultProps = {\n    disabled: false,\n    btnType: ButtonType.Default\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}